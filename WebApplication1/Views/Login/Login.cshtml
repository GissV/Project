<!--@@1 Inicio: Importamos el modelo usuario y definimos un titulo-->
@model WebApplication1.Models.Registro
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var title = "Acceso al Sistema";
    ViewData["Title"] = title;
   }
<!--@@1 Final-->

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <style>
        .form-signin {
            margin: 0 auto;
            max-width: 330px;
            padding: 15px;
        }
            .form-signin h4 {
                text-align: center;
            }
            .input-validation-error {
        border-color: red;
    }
    </style>
    <!--@@2 Final-->
</head>
    <body>

    <!--<div class="container">
        <div class="row justify-content-center">
            <h3>LOGIN</h3>
        </div>
    </div>-->
    
    <div class="container body-content">
        <!--@@3 Inicio: Método de tipo post para validar o iniciar el acceso a la aplicación-->
        @using (Html.BeginForm("Login", "Login", FormMethod.Post, new { @class = "form-signin", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>@title</h4>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.TextBoxFor(m => m.email, new { @class = "form-control", placeholder = "Email" })
                @Html.ValidationMessageFor(m => m.email, "", new { @class = "text-danger" })
                <br />
                @Html.PasswordFor(m => m.contrasena, new { @class = "form-control", placeholder = "Contraseña" })
                @Html.ValidationMessageFor(m => m.contrasena, "", new { @class = "text-danger" })
                <br />
                 <div class="form-group">
                <input type="submit" value="Iniciar sesión" class="btn btn-lg btn-primary btn-block" />
                </div>
            }
        <!--@@3 Final-->
        </div>

        <div class="text-center">
        
        <fb:login-button 
          scope="public_profile,email"
          onlogin="checkLoginState();">
        </fb:login-button>
            <div id="authstatus"></div>
    </div>

        @section Scripts 
        {
            
<script>
  window.fbAsyncInit = function() {
    FB.init({
      appId      : '430252831813589',
      cookie     : true,
      xfbml      : true,
      version    : 'v5.0'
    });
      
    FB.AppEvents.logPageView();   
      
  };

  (function(d, s, id){
     var js, fjs = d.getElementsByTagName(s)[0];
     if (d.getElementById(id)) {return;}
     js = d.createElement(s); js.id = id;
     js.src = "https://connect.facebook.net/en_US/sdk.js";
     fjs.parentNode.insertBefore(js, fjs);
   }(document, 'script', 'facebook-jssdk'));

   function checkLoginState(){
       
FB.getLoginStatus(function(response) {
    $("#authstatus").html("<code>"+JSON.stringify(response, null, 2)+"<code>")
});
   }
</script>
        }

        <script src="/lib/jquery/dist/jquery.min.js"></script>
<script src="/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="/lib/jquery-validation-unobtrusive/dist/jquery.validate.unobtrusive.min.js"></script>
    </body>
</html>

